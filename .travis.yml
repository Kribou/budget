os:
  - linux
services:
  - docker
language: node_js
node_js:
  - '10.16.3'
cache:
  directories:
    - node
    - node_modules
    - $HOME/.m2
env:
  global:
    - NODE_VERSION=10.16.3
    - SPRING_OUTPUT_ANSI_ENABLED=ALWAYS
    - SPRING_JPA_SHOW_SQL=false
    - JHI_DISABLE_WEBPACK_LOGS=true
    - NG_CLI_ANALYTICS="false"
before_install:
  - echo '*** Using OpenJDK 11 by default'
  - sudo add-apt-repository -y ppa:openjdk-r/ppa
  - sudo apt-get update
  - sudo apt-get install -y openjdk-11-jdk
  - sudo update-java-alternatives -s java-1.11.0-openjdk-amd64
  - java -version
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop
  - nvm install $NODE_VERSION
  - npm install -g npm
  - node -v
  - npm -v
install:
  - npm install
script:
  - chmod +x mvnw
  - ./mvnw -ntp clean verify -Pprod -DskipTests
  - ./mvnw -ntp com.github.eirslett:frontend-maven-plugin:npm -Dfrontend.npm.arguments='run test-ci' -Dmaven.repo.local=$MAVEN_USER_HOME
  # the following command line builds the project, runs the tests with coverage and then execute the SonarCloud analysis
  - ./mvnw clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.projectKey=ghanquez_budget
notifications:
  webhooks:
    on_success: change # options: [always|never|change] default: always
    on_failure: always # options: [always|never|change] default: always
    on_start: false # default: false
addons:
  sonarcloud:
    organization: 'ghanquez'
    token:
      secure: 'h2Qblz8m+MmBaluj3XwiwXuxdUsznCSdlRZe/QE2gPjlT306TR47GpUCkxfm7DjmMYKiAyq2rdt5pPz+9bYKUasN/u0GoLNs5lVJzErLAZEseJAe6YlBASMUwBt7EF88/t67bu1RXnv3CIFtYHselIRDU61suxznHdZcScmRXak9F7SAt7HF2WTMwQO2OjPf0bdghxh3o3eQMN5jAexhHcsNc3GN7YrySjRJxnWYcPv1mobEkNjgSNUfLsO20XEbQmmF/0ON0tQCQq2N+qifYwSuqllIUSuModAG4Tl6komJNuFlbfI89iqRMJL1hfK0WJ9laJs/0FPcF5GvkZ5nEmORhlIx+ckg6A0n9c/M4uR5LvsNOODtVz8yDH5TYcSVClEoFRdoOhkXj+WmAs9bz1gb/uXA6v7t2g0S6IT0m1dDf72sHCl78c1p0jx2dNDFJaMBKSFxEVO6xKJWS7CwgveMscl2L2wyxvFEdGAF90RfY4hs1lqGkl+3IgH6iElU3BumugqqCM5h1aiiMakOt8kH35vFPCcUuynJlNXqVsmp8tymvJwV/VZ2x3mjG+rEHzlP8gFq9d6TIVs3L0u2j23C5f0vG6Gjm/PEDfJ2CNBX03G1WjYQAMIktPYXPJQ/ZlmFDE0+TlwDBp3P6N+6y036nPQue9NVMlkiW0V9+TQ='
